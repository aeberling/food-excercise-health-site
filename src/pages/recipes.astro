---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import RecipeCard from '../components/RecipeCard.astro';
import { recipes } from '../data/recipes';
---

<Layout title="Mediterranean Power Plan - Recipes">
  <Navigation />
  
  <main class="max-w-7xl mx-auto px-4 py-8">
    <header class="text-center mb-8">
      <h1 class="text-4xl font-bold text-emerald-700 mb-4">Mediterranean Recipes</h1>
      <p class="text-lg text-slate-600 font-sans max-w-3xl mx-auto">
        High-protein Mediterranean recipes optimized for active adults. Each recipe includes detailed nutritional information, 
        cooking instructions, and pro tips for meal prep.
      </p>
      <p class="text-emerald-600 font-medium mt-4">{recipes.length} recipes available</p>
    </header>

    <!-- Filter Controls -->
    <div class="bg-white rounded-xl shadow-md p-6 mb-8 border border-emerald-100">
      <h2 class="text-lg font-semibold text-emerald-700 mb-4">Filter Recipes</h2>
      
      <div class="grid md:grid-cols-2 gap-6">
        <!-- Meal Type Filters -->
        <div>
          <h3 class="text-sm font-medium text-slate-700 mb-3">Meal Type</h3>
          <div class="flex flex-wrap gap-2">
            <button onclick="filterByCategory('all')" class="filter-btn category-filter bg-emerald-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-emerald-700" data-category="all">
              All Meals
            </button>
            <button onclick="filterByCategory('breakfast')" class="filter-btn category-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-category="breakfast">
              Breakfast
            </button>
            <button onclick="filterByCategory('lunch')" class="filter-btn category-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-category="lunch">
              Lunch
            </button>
            <button onclick="filterByCategory('dinner')" class="filter-btn category-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-category="dinner">
              Dinner
            </button>
            <button onclick="filterByCategory('snack')" class="filter-btn category-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-category="snack">
              Snacks
            </button>
          </div>
        </div>

        <!-- Cooking Method Filters -->
        <div>
          <h3 class="text-sm font-medium text-slate-700 mb-3">Cooking Method</h3>
          <div class="flex flex-wrap gap-2">
            <button onclick="filterByMethod('all')" class="filter-btn method-filter bg-emerald-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-emerald-700" data-method="all">
              All Methods
            </button>
            <button onclick="filterByMethod('air-fryer')" class="filter-btn method-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-method="air-fryer">
              Air Fryer
            </button>
            <button onclick="filterByMethod('instant-pot')" class="filter-btn method-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-method="instant-pot">
              Instant Pot
            </button>
            <button onclick="filterByMethod('crock-pot')" class="filter-btn method-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-method="crock-pot">
              Crock Pot
            </button>
            <button onclick="filterByMethod('pan-cook')" class="filter-btn method-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-method="pan-cook">
              Pan Cook
            </button>
            <button onclick="filterByMethod('oven')" class="filter-btn method-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-method="oven">
              Oven
            </button>
            <button onclick="filterByMethod('no-cook')" class="filter-btn method-filter bg-slate-200 text-slate-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-slate-300" data-method="no-cook">
              No Cook
            </button>
          </div>
        </div>
      </div>

      <div class="mt-4 text-center">
        <button onclick="clearFilters()" class="text-emerald-600 hover:text-emerald-700 text-sm font-medium">
          Clear All Filters
        </button>
        <span id="recipe-count" class="ml-4 text-sm text-slate-600"></span>
      </div>
    </div>

    <!-- Recipe Grid -->
    <div id="recipe-container">
      {recipes.map(recipe => (
        <div class="recipe-item" data-category={recipe.category} data-method={recipe.cookingMethod}>
          <RecipeCard
            id={recipe.id}
            title={recipe.title}
            protein={recipe.protein}
            prepTime={recipe.prepTime}
            cookTime={recipe.cookTime}
            serves={recipe.serves}
            referenceLink={recipe.referenceLink}
            referenceName={recipe.referenceName}
            ingredients={recipe.ingredients}
            instructions={recipe.instructions}
            tips={recipe.tips}
          />
        </div>
      ))}
    </div>

    <!-- No Results Message -->
    <div id="no-results" class="hidden text-center py-12">
      <div class="text-slate-400 mb-4">
        <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
      </div>
      <h3 class="text-xl font-semibold text-slate-600 mb-2">No recipes found</h3>
      <p class="text-slate-500">Try adjusting your filters to see more recipes.</p>
    </div>
  </main>

  <script>
    let currentCategoryFilter = 'all';
    let currentMethodFilter = 'all';

    document.addEventListener('DOMContentLoaded', () => {
      updateRecipeCount();
    });

    function filterByCategory(category) {
      currentCategoryFilter = category;
      updateActiveButton('.category-filter', category);
      applyFilters();
    }

    function filterByMethod(method) {
      currentMethodFilter = method;
      updateActiveButton('.method-filter', method);
      applyFilters();
    }

    function updateActiveButton(selector, activeValue) {
      // Reset all buttons in this group
      document.querySelectorAll(selector).forEach(btn => {
        btn.classList.remove('bg-emerald-600', 'text-white');
        btn.classList.add('bg-slate-200', 'text-slate-700');
      });

      // Activate the selected button
      const activeBtn = document.querySelector(`${selector}[data-${selector.includes('category') ? 'category' : 'method'}="${activeValue}"]`);
      if (activeBtn) {
        activeBtn.classList.remove('bg-slate-200', 'text-slate-700');
        activeBtn.classList.add('bg-emerald-600', 'text-white');
      }
    }

    function applyFilters() {
      const recipes = document.querySelectorAll('.recipe-item');
      let visibleCount = 0;

      recipes.forEach(recipe => {
        const recipeCategory = recipe.dataset.category;
        const recipeMethod = recipe.dataset.method;
        
        const categoryMatch = currentCategoryFilter === 'all' || recipeCategory === currentCategoryFilter;
        const methodMatch = currentMethodFilter === 'all' || recipeMethod === currentMethodFilter;
        
        if (categoryMatch && methodMatch) {
          recipe.style.display = 'block';
          visibleCount++;
        } else {
          recipe.style.display = 'none';
        }
      });

      updateRecipeCount();
      toggleNoResults(visibleCount === 0);
    }

    function clearFilters() {
      currentCategoryFilter = 'all';
      currentMethodFilter = 'all';
      
      updateActiveButton('.category-filter', 'all');
      updateActiveButton('.method-filter', 'all');
      
      document.querySelectorAll('.recipe-item').forEach(recipe => {
        recipe.style.display = 'block';
      });
      
      updateRecipeCount();
      toggleNoResults(false);
    }

    function updateRecipeCount() {
      const visibleRecipes = document.querySelectorAll('.recipe-item[style*="display: block"], .recipe-item:not([style*="display: none"])').length;
      const totalRecipes = document.querySelectorAll('.recipe-item').length;
      
      document.getElementById('recipe-count').textContent = 
        currentCategoryFilter === 'all' && currentMethodFilter === 'all' 
          ? `Showing all ${totalRecipes} recipes`
          : `Showing ${visibleRecipes} of ${totalRecipes} recipes`;
    }

    function toggleNoResults(show) {
      const noResults = document.getElementById('no-results');
      const container = document.getElementById('recipe-container');
      
      if (show) {
        noResults.classList.remove('hidden');
        container.style.display = 'none';
      } else {
        noResults.classList.add('hidden');
        container.style.display = 'block';
      }
    }

    // Make functions globally available
    window.filterByCategory = filterByCategory;
    window.filterByMethod = filterByMethod;
    window.clearFilters = clearFilters;
  </script>
</Layout>